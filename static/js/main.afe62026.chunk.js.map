{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","createStyles","root","flexGrow","buttonStyle","margin","StateType","Toolbar","prop","classes","useState","changeState","newState","setState","container","className","spacing","item","xs","sm","md","lg","state","onClick","variant","alignItems","theme","searchButton","text","insertButton","updateButton","copyButton","detailButton","deleteButton","saveButton","cancelButton","App","ReactDOM","render","document","getElementById"],"mappings":"oOAoBA,E,wEAfMA,EAAYC,aAAW,kBAC3BC,YAAa,CACXC,KAAM,CACJC,SAAU,GAEZC,YAAa,CACXC,OAAQ,SASd,SAAKC,GACHA,uBACAA,uBACAA,mBACAA,uBACAA,uBACAA,mBANF,CAAKA,MAAL,K,IAsBaC,EAAWC,YAEtB,IAAMC,EAAUV,IAFK,EAGKW,mBAASF,EAAnC,OAHqB,mBAGf,EAHe,KAGf,EAHe,KAKfG,EAAeC,YACnBC,MAGF,OACE,uBAAMC,WAAS,EAACC,UAAWN,EAAQP,KAAMc,QAAS,GAChD,uBAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjCC,IAAUhB,EAAVgB,KACC,6BACE,uBAAQC,QAAS,kBAAMZ,EAAYL,EAAD,SAAoBS,UAAWN,EAAQL,YAAaoB,QAAQ,aAAahB,eAD7G,MAEE,uBAAQe,QAAS,kBAAMZ,EAAYL,EAAD,SAAoBS,UAAWN,EAAQL,YAAaoB,QAAQ,aAAahB,eAF7G,MAGE,uBAAQe,QAAS,kBAAMZ,EAAYL,EAAD,SAAoBS,UAAWN,EAAQL,YAAaoB,QAAQ,aAAahB,eAH7G,MAIE,uBAAQe,QAAS,kBAAMZ,EAAYL,EAAD,OAAkBS,UAAWN,EAAQL,YAAaoB,QAAQ,aAAahB,aAJ3G,MAKE,uBAAQe,QAAS,kBAAMZ,EAAYL,EAAD,SAAoBS,UAAWN,EAAQL,YAAaoB,QAAQ,aAAahB,eAN9Gc,OAFL,MAYE,uBAAML,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGI,WAAY,YACjD,uBAAQF,QAAS,kBAAMZ,EAAYL,EAAD,OAAkBS,UAAWN,EAAQL,YAAaoB,QAAQ,aAAahB,aAD3G,MAEE,uBAAQe,QAAS,kBAAMZ,EAAYL,EAAD,OAAkBS,UAAWN,EAAQL,YAAaoB,QAAQ,aAAahB,eAf/G,SAqBFD,eAAuB,CACrBe,MAAOhB,EADc,KAErBoB,MAFqB,QAGrBC,aAAc,CAAEC,KAAM,UACtBC,aAAc,CAAED,KAAM,UACtBE,aAAc,CAAEF,KAAM,UACtBG,WAAY,CAAEH,KAAM,QACpBI,aAAc,CAAEJ,KAAM,gBACtBK,aAAc,CAAEL,KAAM,UAEtBM,WAAY,CAAEN,KAAM,QACpBO,aAAc,CAAEP,KAAM,W,UC1ETQ,EAJH,WACV,OAAO,kBAAC,EAAD,OCATC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.afe62026.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    buttonStyle: {\n      margin: 2\n    }\n  }),\n);\n\ntype ButtonType = {\n  text: string\n}\n\nenum StateType {\n  Insert,\n  Update,\n  Copy,\n  Search,\n  Detail,\n  List\n}\n\ninterface IToolbar {\n  state: StateType,\n  theme: 'white' | 'black',\n  searchButton: ButtonType,\n  insertButton: ButtonType,\n  updateButton: ButtonType,\n  copyButton: ButtonType,\n  detailButton: ButtonType,\n  deleteButton: ButtonType,\n  saveButton: ButtonType,\n  cancelButton: ButtonType\n}\n\nexport const Toolbar = (prop: IToolbar) => {\n\n  const classes = useStyles();\n  const [state, setState] = useState(prop.state);\n\n  const changeState = (newState: StateType) => {\n    setState(newState);\n  }\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        {state === StateType.List ?\n          <div>\n            <Button onClick={() => changeState(StateType.Search)} className={classes.buttonStyle} variant=\"contained\">{prop.searchButton.text}</Button>\n            <Button onClick={() => changeState(StateType.Insert)} className={classes.buttonStyle} variant=\"contained\">{prop.insertButton.text}</Button>\n            <Button onClick={() => changeState(StateType.Update)} className={classes.buttonStyle} variant=\"contained\">{prop.updateButton.text}</Button>\n            <Button onClick={() => changeState(StateType.Copy)} className={classes.buttonStyle} variant=\"contained\">{prop.copyButton.text}</Button>\n            <Button onClick={() => changeState(StateType.Detail)} className={classes.buttonStyle} variant=\"contained\">{prop.detailButton.text}</Button>\n          </div>\n          : null}\n      </Grid>\n      <Grid item xs={6} sm={6} md={6} lg={6} alignItems={'flex-end'}>\n        <Button onClick={() => changeState(StateType.List)} className={classes.buttonStyle} variant=\"contained\">{prop.saveButton.text}</Button>\n        <Button onClick={() => changeState(StateType.List)} className={classes.buttonStyle} variant=\"contained\">{prop.cancelButton.text}</Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nToolbar.defaultProps = {\n  state: StateType.List,\n  theme: 'white',\n  searchButton: { text: 'Search' },\n  insertButton: { text: 'Insert' },\n  updateButton: { text: 'Update' },\n  copyButton: { text: 'Copy' },\n  detailButton: { text: 'Show Details' },\n  deleteButton: { text: 'Delete' },\n\n  saveButton: { text: 'Save' },\n  cancelButton: { text: 'Cancel' }\n}","import React from 'react'\n\nimport { Toolbar } from 'react-toolbar'\nimport 'react-toolbar/dist/index.css'\n\nconst App = () => {\n  return <Toolbar />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}